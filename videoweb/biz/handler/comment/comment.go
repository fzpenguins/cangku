// Code generated by hertz generator.

package comment

import (
	"context"
	"videoweb/response"
	"videoweb/service"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	comment "videoweb/biz/model/hertz/comment"
)

// Publish .
// @router /comment/publish [POST]
func Publish(ctx context.Context, c *app.RequestContext) {
	var err error
	var req comment.CommentPublishReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.JSON(consts.StatusOK, response.BadResponse())
		return
	}

	resp, err := service.PublishComment(ctx, c, &req)
	if err != nil {
		c.JSON(consts.StatusOK, response.BadResponse())
		return
	}
	c.JSON(consts.StatusOK, resp)
}

// List .
// @router /comment/list [GET]
func List(ctx context.Context, c *app.RequestContext) {
	var err error
	var req comment.CommentListReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.JSON(consts.StatusOK, response.BadResponse())
		return
	}

	resp, err := service.ListComment(ctx, c, &req)
	if err != nil {
		c.JSON(consts.StatusOK, response.BadResponse())
		return
	}

	c.JSON(consts.StatusOK, resp)
}

// Delete .
// @router /comment/delete [DELETE]
func Delete(ctx context.Context, c *app.RequestContext) {
	var err error
	var req comment.CommentDeleteReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.JSON(consts.StatusOK, response.BadResponse())
		return
	}

	resp, err := service.DeleteComment(ctx, c, &req)
	if err != nil {
		c.JSON(consts.StatusOK, response.BadResponse())
		return
	}

	c.JSON(consts.StatusOK, resp)
}
